[tool.poetry]
name = "env-proxy"
version = "1.0.0"
description = "Creates a class used to query environmental variables with typehinting a conversion to basic Python types."
authors = ["Tomas Votava <info@tomasvotava.eu>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/tomasvotava/env-proxy"
repository = "https://github.com/tomasvotava/env-proxy"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
mypy = "^1.13.0"
ruff = "^0.7.2"

[tool.poetry.dependencies]
python = "^3.9,<3.14"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py39"
line-length = 120

[tool.ruff.lint]
select = [
    "E",
    "W",
    "F",
    "B",
    "I",
    "N",
    "UP",
    "S",
    "A",
    "Q",
    "DTZ",
    "PT",
    "SIM",
    "PTH",
    "RUF",
    "T20",
    "ASYNC",
    "C4",
    "DJ",
    "ISC",
    "TCH",
    "TD",
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "S101",   # allow asserts in tests
    "RUF018", # allow asserts with walrus in tests
    "D",      # ignore missing documentation in tests
]

[tool.mypy]
strict = true
